df.mean.plot.scale = data.frame(t(df.mean.plot.scale),"Cluster" = 1:3)
colnames(df.mean.plot.scale)[-ncol(df.mean.plot.scale)] = colnames(total.estimate)[col.num]
print(plot.cord.each(df.plot,1,length(col.num),"RIX*Diet"))
print(plot.cord.each(df.plot,2,length(col.num),"RIX*Diet"))
print(plot.cord.each(df.plot,3,length(col.num),"RIX*Diet"))
print(plot.cord.each(df.plot,1,length(col.num),"RIX*Diet",onlybehav = T))
print(plot.cord.each(df.plot,2,length(col.num),"RIX*Diet",onlybehav = T))
print(plot.cord.each(df.plot,3,length(col.num),"RIX*Diet",onlybehav = T))
## RIX DIET
col.num = 15:ncol(total.estimate)
x <- 1-cor(t(total.estimate[,col.num]))
x = as.dist(x)
hc<-hclust(x, method="complete")
plot(hc, hang=-1,main = "RIX*Diet effect",labels = F)
clust.vec.rixdiet<-cutree(hc, k = 5)
table(clust.vec.rixdiet)
df.plot = data.frame(cbind(total.estimate[,col.num],"Cluster" = clust.vec.rixdiet))
colnames(df.plot)[1:length(col.num)] = colnames(total.estimate[,col.num])
df.mean.plot.scale = sapply(1:5, function(x){
colMeans(df.plot[clust.vec.rixdiet == x,1:length(col.num)])
})
df.mean.plot.scale = data.frame(t(df.mean.plot.scale),"Cluster" = 1:5)
colnames(df.mean.plot.scale)[-ncol(df.mean.plot.scale)] = colnames(total.estimate)[col.num]
print(plot.cord(df.mean.plot.scale,length(col.num),"RIX*Diet")+
scale_color_manual("Mean value",
values = c("lightblue","lightcoral","lightgreen","hotpink2","grey"),
labels = paste0("Cluster",1:5)))
plot.cord(df.plot,length(col.num),"RIX*Diet")
plot.cord(df.plot,length(col.num),"RIX*Diet",onlybehav = T)
print(plot.cord.each(df.plot,1,length(col.num),"RIX*Diet",onlybehav = T))
print(plot.cord.each(df.plot,2,length(col.num),"RIX*Diet",onlybehav = T))
print(plot.cord.each(df.plot,3,length(col.num),"RIX*Diet",onlybehav = T))
print(plot.cord.each(df.plot,4,length(col.num),"RIX*Diet",onlybehav = T))
plot(hc, hang=-1,main = "RIX*Diet effect",labels = F)
clust.vec.rixdiet<-cutree(hc, k = 3)
table(clust.vec.rixdiet)
df.plot = data.frame(cbind(total.estimate[,col.num],"Cluster" = clust.vec.rixdiet))
colnames(df.plot)[1:length(col.num)] = colnames(total.estimate[,col.num])
df.mean.plot.scale = sapply(1:3, function(x){
colMeans(df.plot[clust.vec.rixdiet == x,1:length(col.num)])
})
df.mean.plot.scale = data.frame(t(df.mean.plot.scale),"Cluster" = 1:3)
colnames(df.mean.plot.scale)[-ncol(df.mean.plot.scale)] = colnames(total.estimate)[col.num]
print(plot.cord.each(df.plot,1,length(col.num),"RIX*Diet",onlybehav = T))
print(plot.cord.each(df.plot,2,length(col.num),"RIX*Diet",onlybehav = T))
print(plot.cord.each(df.plot,3,length(col.num),"RIX*Diet",onlybehav = T))
plot.cord.each = function(df.plot,i,col.num,effect,is.title = T,onlybehav = F){
df = df.plot[df.plot$Cluster == i,]
df$Cluster = 1
df$Cluster[rownames(df) %in% rownames(behav_estimate.scale)] = 2
df = rbind(df,c(colMeans(df[,-(col.num+1)]),0))
if (onlybehav){
df = df[!(rownames(df) %in% rownames(gene_estimate.scale)),]
}
df$Cluster = as.character(df$Cluster)
if (onlybehav){
col_man = scale_color_manual("",
values = c("black","coral1"),
labels = c("Mean value","Behavior"))
}
if (!onlybehav){
col_man = scale_color_manual("",
values = c("black","coral1","blue"),
labels = c("Mean value",paste0("Cluster",i),"Behavior"))
}
ggparcoord(data = df,
columns = 1:col.num,
groupColumn = "Cluster",
scale = "uniminmax",
boxplot = F,
title = ifelse(is.title, paste0(effect, " effect for cluster ",i),"")) +
geom_line(size = 0.5)+ col_man+
coord_flip() +
theme(
axis.title.x=element_blank(),
axis.title.y=element_blank()
)
}
print(plot.cord.each(df.plot,3,length(col.num),"RIX*Diet",onlybehav = T))
print(plot.cord.each(df.plot,1,length(col.num),"RIX*Diet",onlybehav = T))
print(plot.cord.each(df.plot,2,length(col.num),"RIX*Diet",onlybehav = T))
clust.vec.rixdiet<-cutree(hc, k = 5)
table(clust.vec.rixdiet)
df.plot = data.frame(cbind(total.estimate[,col.num],"Cluster" = clust.vec.rixdiet))
colnames(df.plot)[1:length(col.num)] = colnames(total.estimate[,col.num])
df.mean.plot.scale = sapply(1:5, function(x){
colMeans(df.plot[clust.vec.rixdiet == x,1:length(col.num)])
})
df.mean.plot.scale = data.frame(t(df.mean.plot.scale),"Cluster" = 1:5)
colnames(df.mean.plot.scale)[-ncol(df.mean.plot.scale)] = colnames(total.estimate)[col.num]
gene_estimate <- readRDS("~/Desktop/Will/Paper/cluster/gene_estimate.rds")[,-1]
behav_estimate <- t(readRDS("~/Desktop/Will/Paper/cluster/behav_estimate.rds"))
colnames(behav_estimate)[38:41] = c("RIX*Diet(LowProtein_RIX8)","RIX*Diet(MethylEnriched_RIX8)"
,"RIX*Diet(VitaminDDeficient_RIX8)","RIX*Diet(Standard_RIX8)")
colnames(gene_estimate) = gsub("_","",colnames(gene_estimate))
colnames(behav_estimate) = gsub("_","",colnames(behav_estimate))
gene_estimate.scale = t(scale(t(gene_estimate),center = F))
behav_estimate.scale = t(scale(t(behav_estimate),center = F))
total.estimate = rbind(behav_estimate.scale[,colnames(gene_estimate.scale)],gene_estimate.scale)
colnames(total.estimate) = gsub("Diet","",colnames(total.estimate))
colnames(total.estimate) = gsub("RIX*","",colnames(total.estimate),fixed = T)
colnames(total.estimate) = gsub("(","",colnames(total.estimate),fixed = T)
colnames(total.estimate) = gsub(")","",colnames(total.estimate),fixed = T)
library(GGally)
library(factoextra)
library(ggpubr)
plot.cord = function(df.plot,col.num,effect,is.title = T,onlybehav = F){
df.plot$Cluster = as.character(df.plot$Cluster)
if (onlybehav){
df.plot = df.plot[!(rownames(df.plot) %in% rownames(gene_estimate.scale)),]
}
ggparcoord(data = df.plot,
columns = 1:col.num,
groupColumn = "Cluster",
scale = "globalminmax",
boxplot = F,
title = ifelse(is.title,paste0(effect," effect"),""))+
geom_line(size = 0.25) + coord_flip() +
theme(
axis.title.x=element_blank(),
axis.title.y=element_blank()
)
}
plot.cord.each = function(df.plot,i,col.num,effect,is.title = T,onlybehav = F){
df = df.plot[df.plot$Cluster == i,]
df$Cluster = 1
df$Cluster[rownames(df) %in% rownames(behav_estimate.scale)] = 2
df = rbind(df,c(colMeans(df[,-(col.num+1)]),0))
if (onlybehav){
df = df[!(rownames(df) %in% rownames(gene_estimate.scale)),]
}
df$Cluster = as.character(df$Cluster)
if (onlybehav){
col_man = scale_color_manual("",
values = c("black","coral1"),
labels = c("Mean value","Behavior"))
}
if (!onlybehav){
col_man = scale_color_manual("",
values = c("black","coral1","blue"),
labels = c("Mean value",paste0("Cluster",i),"Behavior"))
}
ggparcoord(data = df,
columns = 1:col.num,
groupColumn = "Cluster",
scale = "globalminmax",
boxplot = F,
title = ifelse(is.title, paste0(effect, " effect for cluster ",i),"")) +
geom_line(size = 0.5)+ col_man+
coord_flip() +
theme(
axis.title.x=element_blank(),
axis.title.y=element_blank()
)
}
## DIET
col.num = 1:4
x <- 1-cor(t(total.estimate[,col.num]))
x = as.dist(x)
hc<-hclust(x, method="complete")
tiff("~/Desktop/Will/Paper/cluster/figure/behav_cluster/diet/hc_diet.tiff", units="in", width=5, height=5, res=300)
plot(hc, hang=-1,main = "Diet effect",labels = F)
abline(h = sort(hc$height,decreasing = T)[4] + 0.1,col = "red" ,lwd = 0.5,lty = 2)
dev.off()
clust.vec.diet<-cutree(hc, k = 4)
df.plot = data.frame(cbind(total.estimate[,col.num],"Cluster" = clust.vec.diet))
colnames(df.plot)[1:length(col.num)] = colnames(total.estimate[,col.num])
##meta analysis to plot mean values
df.mean.plot.scale = sapply(1:4, function(x){
colMeans(df.plot[clust.vec.diet == x,col.num])
})
df.mean.plot.scale = data.frame(t(df.mean.plot.scale),"Cluster" = 1:4)
colnames(df.mean.plot.scale)[-ncol(df.mean.plot.scale)] = colnames(total.estimate)[col.num]
##plot
tiff("~/Desktop/Will/Paper/cluster/figure/behav_cluster/diet/cord_diet_mean.tiff", units="in", width=5, height=10, res=300)
print(plot.cord(df.mean.plot.scale,4,"Diet")+
scale_color_manual("Mean value",
values = c("lightblue","lightcoral","lightgreen","hotpink2","grey"),
labels = paste0("Cluster",1:4)))
dev.off()
##for each
tiff("~/Desktop/Will/Paper/cluster/figure/behav_cluster/diet/cord_diet.tiff", units="in", width=5, height=5, res=300)
plot.cord(df.plot,4,"Diet")
dev.off()
tiff("~/Desktop/Will/Paper/cluster/figure/behav_cluster/diet/cord_diet_onlybehav.tiff", units="in", width=5, height=5, res=300)
plot.cord(df.plot,4,"Diet",onlybehav = T)
dev.off()
sapply(1:4, function(x){
tiff(paste0("~/Desktop/Will/Paper/cluster/figure/behav_cluster/diet/cord_diet_cluster",x,".tiff"), units="in", width=5, height=5, res=300)
print(plot.cord.each(df.plot,x,4,"Diet"))
dev.off()
tiff(paste0("~/Desktop/Will/Paper/cluster/figure/behav_cluster/diet/cord_diet_cluster",x,"_onlybehav.tiff"), units="in", width=5, height=5, res=300)
print(plot.cord.each(df.plot,x,4,"Diet",onlybehav = T))
dev.off()
})
##pca diet
res.pca<-prcomp(total.estimate[,col.num])
ind.coord <- as.data.frame(get_pca_ind(res.pca)$coord)
ind.coord$cluster <- factor(clust.vec.diet)
eigenvalue <- round(get_eigenvalue(res.pca), 1)
variance.percent <- eigenvalue$variance.percent
tiff("~/Desktop/Will/Paper/cluster/figure/behav_cluster/diet/pca_diet.tiff", units="in", width=5, height=5, res=300)
ggscatter(
ind.coord, x = "Dim.1", y = "Dim.2",
color = "cluster", palette = "npg", ellipse = TRUE, ellipse.type = "convex",
size = 1.5,  legend = "right", ggtheme = theme_bw(),
xlab = paste0("Dim 1 (", variance.percent[1], "% )" ),
ylab = paste0("Dim 2 (", variance.percent[2], "% )" ),
title = "Diet effect"
) +
stat_mean(aes(color = cluster), size = 4)
dev.off()
## RIX DIET
col.num = 15:ncol(total.estimate)
x <- 1-cor(t(total.estimate[,col.num]))
x = as.dist(x)
hc<-hclust(x, method="complete")
tiff("~/Desktop/Will/Paper/cluster/figure/behav_cluster/rixdiet/hc_rixdiet.tiff", units="in", width=5, height=5, res=300)
plot(hc, hang=-1,main = "RIX*Diet effect",labels = F)
abline(h = sort(hc$height,decreasing = T)[5],col = "red" ,lwd = 0.5,lty = 2)
dev.off()
clust.vec.rixdiet<-cutree(hc, k = 5)
table(clust.vec.rixdiet)
df.plot = data.frame(cbind(total.estimate[,col.num],"Cluster" = clust.vec.rixdiet))
colnames(df.plot)[1:length(col.num)] = colnames(total.estimate[,col.num])
##meta analysis to plot mean values
df.mean.plot.scale = sapply(1:5, function(x){
colMeans(df.plot[clust.vec.rixdiet == x,1:length(col.num)])
})
df.mean.plot.scale = data.frame(t(df.mean.plot.scale),"Cluster" = 1:5)
colnames(df.mean.plot.scale)[-ncol(df.mean.plot.scale)] = colnames(total.estimate)[col.num]
##plot
tiff("~/Desktop/Will/Paper/cluster/figure/behav_cluster/rixdiet/cord_diet_mean.tiff", units="in", width=5, height=10, res=300)
print(plot.cord(df.mean.plot.scale,length(col.num),"RIX*Diet")+
scale_color_manual("Mean value",
values = c("lightblue","lightcoral","lightgreen","hotpink2","grey"),
labels = paste0("Cluster",1:5)))
dev.off()
##for each
tiff("~/Desktop/Will/Paper/cluster/figure/behav_cluster/rixdiet/cord_rixdiet.tiff", units="in", width=5, height=5, res=300)
plot.cord(df.plot,length(col.num),"RIX*Diet")
dev.off()
tiff("~/Desktop/Will/Paper/cluster/figure/behav_cluster/rixdiet/cord_rixdiet_onlybehav.tiff", units="in", width=5, height=5, res=300)
plot.cord(df.plot,length(col.num),"RIX*Diet",onlybehav = T)
dev.off()
sapply(1:5, function(x){
tiff(paste0("~/Desktop/Will/Paper/cluster/figure/behav_cluster/rixdiet/cord_rixdiet_cluster",x,".tiff"), units="in", width=5, height=5, res=300)
print(plot.cord.each(df.plot,x,length(col.num),"RIX*Diet"))
dev.off()
tiff(paste0("~/Desktop/Will/Paper/cluster/figure/behav_cluster/rixdiet/cord_rixdiet_cluster",x,"_onlybehav.tiff"), units="in", width=5, height=5, res=300)
print(plot.cord.each(df.plot,x,length(col.num),"RIX*Diet",onlybehav = T))
dev.off()
})
##pca diet
res.pca<-prcomp(total.estimate[,col.num])
ind.coord <- as.data.frame(get_pca_ind(res.pca)$coord)
ind.coord$cluster <- factor(clust.vec.rixdiet)
eigenvalue <- round(get_eigenvalue(res.pca), 1)
variance.percent <- eigenvalue$variance.percent
tiff("~/Desktop/Will/Paper/cluster/figure/behav_cluster/rixdiet/pca_rixdiet.tiff", units="in", width=5, height=5, res=300)
ggscatter(
ind.coord, x = "Dim.1", y = "Dim.2",
color = "cluster", palette = "npg", ellipse = TRUE, ellipse.type = "convex",
size = 1.5,  legend = "right", ggtheme = theme_bw(),
xlab = paste0("Dim 1 (", variance.percent[1], "% )" ),
ylab = paste0("Dim 2 (", variance.percent[2], "% )" ),
title = "RIX*Diet effect"
) +
stat_mean(aes(color = cluster), size = 4)
dev.off()
gene_estimate <- readRDS("~/Desktop/Will/Paper/cluster/gene_estimate.rds")[,-1]
behav_estimate <- t(readRDS("~/Desktop/Will/Paper/cluster/behav_estimate.rds"))
colnames(behav_estimate)[38:41] = c("RIX*Diet(LowProtein_RIX8)","RIX*Diet(MethylEnriched_RIX8)"
,"RIX*Diet(VitaminDDeficient_RIX8)","RIX*Diet(Standard_RIX8)")
colnames(gene_estimate) = gsub("_","",colnames(gene_estimate))
colnames(behav_estimate) = gsub("_","",colnames(behav_estimate))
gene_estimate.scale = t(scale(t(gene_estimate),center = F))
behav_estimate.scale = t(scale(t(behav_estimate),center = F))
total.estimate = rbind(behav_estimate.scale[,colnames(gene_estimate.scale)],gene_estimate.scale)
colnames(total.estimate) = gsub("Diet","",colnames(total.estimate))
colnames(total.estimate) = gsub("RIX*","",colnames(total.estimate),fixed = T)
colnames(total.estimate) = gsub("(","",colnames(total.estimate),fixed = T)
colnames(total.estimate) = gsub(")","",colnames(total.estimate),fixed = T)
library(GGally)
library(factoextra)
library(ggpubr)
plot.cord = function(df.plot,col.num,effect,is.title = T,onlybehav = F){
df.plot$Cluster = as.character(df.plot$Cluster)
if (onlybehav){
df.plot = df.plot[!(rownames(df.plot) %in% rownames(gene_estimate.scale)),]
}
ggparcoord(data = df.plot,
columns = 1:col.num,
groupColumn = "Cluster",
scale = "globalminmax",
boxplot = F,
title = ifelse(is.title,paste0(effect," effect"),""))+
geom_line(size = 0.25) + coord_flip() +
theme(
axis.title.x=element_blank(),
axis.title.y=element_blank()
)
}
plot.cord.each = function(df.plot,i,col.num,effect,is.title = T,onlybehav = F){
df = df.plot[df.plot$Cluster == i,]
df$Cluster = 1
df$Cluster[rownames(df) %in% rownames(behav_estimate.scale)] = 2
df = rbind(df,c(colMeans(df[,-(col.num+1)]),0))
if (onlybehav){
df = df[!(rownames(df) %in% rownames(gene_estimate.scale)),]
}
df$Cluster = as.character(df$Cluster)
if (onlybehav){
col_man = scale_color_manual("",
values = c("black","coral1"),
labels = c("Mean value","Behavior"))
}
if (!onlybehav){
col_man = scale_color_manual("",
values = c("black","coral1","blue"),
labels = c("Mean value",paste0("Cluster",i),"Behavior"))
}
ggparcoord(data = df,
columns = 1:col.num,
groupColumn = "Cluster",
scale = "globalminmax",
boxplot = F,
title = ifelse(is.title, paste0(effect, " effect for cluster ",i),"")) +
geom_line(size = 0.5)+ col_man+
coord_flip() +
theme(
axis.title.x=element_blank(),
axis.title.y=element_blank()
)
}
## DIET
col.num = 1:4
x <- 1-cor(t(total.estimate[,col.num]))
x = as.dist(x)
hc<-hclust(x, method="complete")
tiff("~/Desktop/Will/Paper/cluster/figure/behav_cluster/diet/hc_diet.tiff", units="in", width=5, height=5, res=300)
plot(hc, hang=-1,main = "Diet effect",labels = F)
abline(h = sort(hc$height,decreasing = T)[4] + 0.1,col = "red" ,lwd = 0.5,lty = 2)
dev.off()
clust.vec.diet<-cutree(hc, k = 4)
df.plot = data.frame(cbind(total.estimate[,col.num],"Cluster" = clust.vec.diet))
colnames(df.plot)[1:length(col.num)] = colnames(total.estimate[,col.num])
##meta analysis to plot mean values
df.mean.plot.scale = sapply(1:4, function(x){
colMeans(df.plot[clust.vec.diet == x,col.num])
})
df.mean.plot.scale = data.frame(t(df.mean.plot.scale),"Cluster" = 1:4)
colnames(df.mean.plot.scale)[-ncol(df.mean.plot.scale)] = colnames(total.estimate)[col.num]
##plot
tiff("~/Desktop/Will/Paper/cluster/figure/behav_cluster/diet/cord_diet_mean.tiff", units="in", width=5, height=10, res=300)
print(plot.cord(df.mean.plot.scale,4,"Diet")+
scale_color_manual("Mean value",
values = c("lightblue","lightcoral","lightgreen","hotpink2","grey"),
labels = paste0("Cluster",1:4)))
dev.off()
##for each
tiff("~/Desktop/Will/Paper/cluster/figure/behav_cluster/diet/cord_diet.tiff", units="in", width=5, height=5, res=300)
plot.cord(df.plot,4,"Diet")
dev.off()
tiff("~/Desktop/Will/Paper/cluster/figure/behav_cluster/diet/cord_diet_onlybehav.tiff", units="in", width=5, height=5, res=300)
plot.cord(df.plot,4,"Diet",onlybehav = T)
dev.off()
sapply(1:4, function(x){
tiff(paste0("~/Desktop/Will/Paper/cluster/figure/behav_cluster/diet/cord_diet_cluster",x,".tiff"), units="in", width=5, height=5, res=300)
print(plot.cord.each(df.plot,x,4,"Diet"))
dev.off()
tiff(paste0("~/Desktop/Will/Paper/cluster/figure/behav_cluster/diet/cord_diet_cluster",x,"_onlybehav.tiff"), units="in", width=5, height=5, res=300)
print(plot.cord.each(df.plot,x,4,"Diet",onlybehav = T))
dev.off()
})
##pca diet
res.pca<-prcomp(total.estimate[,col.num])
ind.coord <- as.data.frame(get_pca_ind(res.pca)$coord)
ind.coord$cluster <- factor(clust.vec.diet)
eigenvalue <- round(get_eigenvalue(res.pca), 1)
variance.percent <- eigenvalue$variance.percent
tiff("~/Desktop/Will/Paper/cluster/figure/behav_cluster/diet/pca_diet.tiff", units="in", width=5, height=5, res=300)
ggscatter(
ind.coord, x = "Dim.1", y = "Dim.2",
color = "cluster", palette = "npg", ellipse = TRUE, ellipse.type = "convex",
size = 1.5,  legend = "right", ggtheme = theme_bw(),
xlab = paste0("Dim 1 (", variance.percent[1], "% )" ),
ylab = paste0("Dim 2 (", variance.percent[2], "% )" ),
title = "Diet effect"
) +
stat_mean(aes(color = cluster), size = 4)
dev.off()
## RIX DIET
col.num = 15:ncol(total.estimate)
x <- 1-cor(t(total.estimate[,col.num]))
x = as.dist(x)
hc<-hclust(x, method="complete")
tiff("~/Desktop/Will/Paper/cluster/figure/behav_cluster/rixdiet/hc_rixdiet.tiff", units="in", width=5, height=5, res=300)
plot(hc, hang=-1,main = "RIX*Diet effect",labels = F)
abline(h = sort(hc$height,decreasing = T)[5],col = "red" ,lwd = 0.5,lty = 2)
dev.off()
clust.vec.rixdiet<-cutree(hc, k = 5)
table(clust.vec.rixdiet)
df.plot = data.frame(cbind(total.estimate[,col.num],"Cluster" = clust.vec.rixdiet))
colnames(df.plot)[1:length(col.num)] = colnames(total.estimate[,col.num])
##meta analysis to plot mean values
df.mean.plot.scale = sapply(1:5, function(x){
colMeans(df.plot[clust.vec.rixdiet == x,1:length(col.num)])
})
df.mean.plot.scale = data.frame(t(df.mean.plot.scale),"Cluster" = 1:5)
colnames(df.mean.plot.scale)[-ncol(df.mean.plot.scale)] = colnames(total.estimate)[col.num]
##plot
tiff("~/Desktop/Will/Paper/cluster/figure/behav_cluster/rixdiet/cord_diet_mean.tiff", units="in", width=5, height=10, res=300)
print(plot.cord(df.mean.plot.scale,length(col.num),"RIX*Diet")+
scale_color_manual("Mean value",
values = c("lightblue","lightcoral","lightgreen","hotpink2","grey"),
labels = paste0("Cluster",1:5)))
dev.off()
##for each
tiff("~/Desktop/Will/Paper/cluster/figure/behav_cluster/rixdiet/cord_rixdiet.tiff", units="in", width=5, height=5, res=300)
plot.cord(df.plot,length(col.num),"RIX*Diet")
dev.off()
tiff("~/Desktop/Will/Paper/cluster/figure/behav_cluster/rixdiet/cord_rixdiet_onlybehav.tiff", units="in", width=5, height=5, res=300)
plot.cord(df.plot,length(col.num),"RIX*Diet",onlybehav = T)
dev.off()
sapply(1:5, function(x){
tiff(paste0("~/Desktop/Will/Paper/cluster/figure/behav_cluster/rixdiet/cord_rixdiet_cluster",x,".tiff"), units="in", width=5, height=5, res=300)
print(plot.cord.each(df.plot,x,length(col.num),"RIX*Diet"))
dev.off()
tiff(paste0("~/Desktop/Will/Paper/cluster/figure/behav_cluster/rixdiet/cord_rixdiet_cluster",x,"_onlybehav.tiff"), units="in", width=5, height=5, res=300)
print(plot.cord.each(df.plot,x,length(col.num),"RIX*Diet",onlybehav = T))
dev.off()
})
##pca diet
res.pca<-prcomp(total.estimate[,col.num])
ind.coord <- as.data.frame(get_pca_ind(res.pca)$coord)
ind.coord$cluster <- factor(clust.vec.rixdiet)
eigenvalue <- round(get_eigenvalue(res.pca), 1)
variance.percent <- eigenvalue$variance.percent
tiff("~/Desktop/Will/Paper/cluster/figure/behav_cluster/rixdiet/pca_rixdiet.tiff", units="in", width=5, height=5, res=300)
ggscatter(
ind.coord, x = "Dim.1", y = "Dim.2",
color = "cluster", palette = "npg", ellipse = TRUE, ellipse.type = "convex",
size = 1.5,  legend = "right", ggtheme = theme_bw(),
xlab = paste0("Dim 1 (", variance.percent[1], "% )" ),
ylab = paste0("Dim 2 (", variance.percent[2], "% )" ),
title = "RIX*Diet effect"
) +
stat_mean(aes(color = cluster), size = 4)
dev.off()
ds_salaries <- read.csv("Documents/GitHub/bios-611-project/source_data/ds_salaries.csv")
View(ds_salaries)
ds_salaries <- read.csv("Documents/GitHub/bios-611-project/source_data/ds_salaries.csv",col.names = 1)
ds_salaries <- read.csv("Documents/GitHub/bios-611-project/source_data/ds_salaries.csv",row.names = 1)
View(ds_salaries)
table(ds_salaries$company_location)
table(ds_salaries$remote_ratio)
library("ggplot2")
View(ds_salaries)
colnames(ds_salaries)
ds_salaries <- read_csv("Documents/GitHub/bios-611-project/source_data/ds_salaries.csv",
work_year = col_factor(),
experience_level = col_factor() ,
employment_type = col_factor(),
job_title = col_factor() ,
employee_residence = col_factor(),
remote_ratio = col_factor(),
company_location = col_factor(),
company_size = col_factor(),
salary_in_usd = col_num())
library(readxl)
ds_salaries <- read_csv("Documents/GitHub/bios-611-project/source_data/ds_salaries.csv",
work_year = col_factor(),
experience_level = col_factor() ,
employment_type = col_factor(),
job_title = col_factor() ,
employee_residence = col_factor(),
remote_ratio = col_factor(),
company_location = col_factor(),
company_size = col_factor(),
salary_in_usd = col_num())
library(readr)
ds_salaries <- read_csv("Documents/GitHub/bios-611-project/source_data/ds_salaries.csv",
work_year = col_factor(),
experience_level = col_factor() ,
employment_type = col_factor(),
job_title = col_factor() ,
employee_residence = col_factor(),
remote_ratio = col_factor(),
company_location = col_factor(),
company_size = col_factor(),
salary_in_usd = col_num())
ds_salaries <- read.csv("Documents/GitHub/bios-611-project/source_data/ds_salaries.csv",row.names = 1)
View(ds_salaries)
table(ds_salaries$company_location
)
ds_salaries = ds_salaries %>% mutate(is_in_us = company_location == "US")
library(dplyr)
ds_salaries = ds_salaries %>% mutate(is_in_us = company_location == "US")
table(ds_salaries$experience_level)
table(ds_salaries)
table(ds_salaries$job_title)
boxplot(ds_salaries$salary_in_usd)
boxplot(ds_salaries$salary_in_usd/10000)
boxplot(ds_salaries$salary_in_usd/10000, main = "Salary in US Dollar", xlab = "Salary (in 10K)")
boxplot(ds_salaries$salary_in_usd/10000 ~ ds_salaries$work_year)
boxplot(ds_salaries$salary_in_usd/10000, main = "Salary in US Dollar", xlab = "Salary (in 10K)")
boxplot(ds_salaries$salary_in_usd/10000 ~ ds_salaries$work_year)
boxplot(ds_salaries$salary_in_usd/10000 ~ ds_salaries$work_year, xlab = "Year",ylab = "Salary (in 10K)",main = "Salary ~ year")
ds_salaries = ds_salaries %>% mutate(is_in_us = company_location == "US") %>% mutate(salary_in_usd_10K = salary_in_usd/10000)
View(ds_salaries)
setwd("~/Documents/GitHub/bios-611-project")
